#This Makefile is a standard pg_gitbuildext building framework for a PostgreSQL extension
#Dont edit this file directly edit the Makefile instead
#Copyright Martin Hoffmann 2019-2020 - Version 0.3

build : splash parameters $(BUILD_EXTENSION_CONTROL) $(BUILD_MAIN_SCRIPT) $(BUILD_UPDATE_SCRIPT)


test_backup :
	sudo -u $(TESTUSER) pg_dump --format=c --no-owner --no-privileges --no-tablespaces --schema "hn_ranker" $(TESTDATABASE) > pg_hn_ranker.bak

test_deploy :
	$(MAKE) build
	sudo $(MAKE) install
	sudo -u $(TESTUSER) psql -c "DROP DATABASE IF EXISTS $(TESTDATABASE);"
	sudo -u $(TESTUSER) psql -c "CREATE DATABASE $(TESTDATABASE);"
	sudo -u $(TESTUSER) psql -d $(TESTDATABASE) -c "CREATE EXTENSION $(EXTENSION) VERSION '$(BUILD)' CASCADE;"

test_restore : test_deploy
	sudo -u $(TESTUSER) pg_restore -a -d $(TESTDATABASE) pg_hn_ranker.bak
	sudo -u $(TESTUSER) psql -d $(TESTDATABASE) -c "SELECT setval('$(EXTENSION_SCHEMA).run_id_seq', (SELECT max(id) FROM $(EXTENSION_SCHEMA).run), true);"

installcheck: test_deploy
	sudo -u $(TESTUSER) psql -d $(TESTDATABASE) -c "CREATE EXTENSION IF NOT EXISTS pgtap;"
	sudo -u $(TESTUSER) pg_prove -d $(TESTDATABASE) -v --pset tuples_only=1 $(TESTS)
	sudo -u $(TESTUSER) psql -c "DROP DATABASE IF EXISTS $(TESTDATABASE);"

splash :
	@echo '****************************************************'
	@echo 'Build system for PostgreSQL extension $(EXTENSION) '
	@echo 'Powered by pg_gitbuildext building framework Version 0.3'
	@echo '****************************************************'

parameters: splash
	@echo 'Commit $(COMMIT) on branch $(BRANCH)'
	@echo '****************************************************'
	@echo '              EXTENSION : $(EXTENSION)'
	@echo '       EXTENSION_SCHEMA : $(EXTENSION_SCHEMA)'
	@echo '            LASTRELEASE : $(LASTRELEASE)'
	@echo '         CURRENTRELEASE : $(CURRENTRELEASE)'
	@echo '                  BUILD : $(BUILD)'
	@echo 'BUILD_EXTENSION_CONTROL : $(BUILD_EXTENSION_CONTROL)'
	@echo '      BUILD_MAIN_SCRIPT : $(BUILD_MAIN_SCRIPT)'
	@echo '    BUILD_UPDATE_SCRIPT : $(BUILD_UPDATE_SCRIPT)'
	@echo
	@echo '           TESTDATABASE : $(TESTDATABASE)'
	@echo '               TESTUSER : $(TESTUSER)'
	@echo

PG_CONFIG = pg_config
PGXS := $(shell $(PG_CONFIG) --pgxs)
include $(PGXS)